{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eamon\\\\Documents\\\\Udemy\\\\React - The Complete Guide - Maximilian\\\\expense-app\\\\src\\\\components\\\\Chart\\\\ChartBar.js\";\nimport React from \"react\";\nimport \"./ChartBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartBar = props => {\n  //default the bar to fill to 0 percent\n  let barFillHeight = \"0%\"; //if we have props then we set the bar fill height to be\n  //the precent of maxvalue\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round(props.value / props.maxValue * 100) + \"%\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bar__fill\",\n        style: {\n          height: barFillHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__label\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChartBar;\nexport default ChartBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartBar\");","map":{"version":3,"names":["React","ChartBar","props","barFillHeight","maxValue","Math","round","value","height","label"],"sources":["C:/Users/eamon/Documents/Udemy/React - The Complete Guide - Maximilian/expense-app/src/components/Chart/ChartBar.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  //default the bar to fill to 0 percent\r\n  let barFillHeight = \"0%\";\r\n  //if we have props then we set the bar fill height to be\r\n  //the precent of maxvalue\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAC1B;EACA,IAAIC,aAAa,GAAG,IAApB,CAF0B,CAG1B;EACA;;EACA,IAAID,KAAK,CAACE,QAAN,GAAiB,CAArB,EAAwB;IACtBD,aAAa,GAAGE,IAAI,CAACC,KAAL,CAAYJ,KAAK,CAACK,KAAN,GAAcL,KAAK,CAACE,QAArB,GAAiC,GAA5C,IAAmD,GAAnE;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE;MAAK,SAAS,EAAC,kBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,iBAAf;QAAiC,KAAK,EAAE;UAACI,MAAM,EAAEL;QAAT;MAAxC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAK,SAAS,EAAC,kBAAf;MAAA,UAAmCD,KAAK,CAACO;IAAzC;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAjBD;;KAAMR,Q;AAmBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}